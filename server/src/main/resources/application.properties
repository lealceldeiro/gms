# region DB
spring.datasource.url=jdbc:postgresql://127.0.0.1/gmsdev
# user with granted permissions for performing CREATE, UPDATE, SELECT and DELETE queries
spring.datasource.username=postgres
# password for user with granted permissions for performing CREATE, UPDATE, SELECT and DELETE queries
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.open-in-view=false
spring.flyway.locations=classpath:db/migration/{vendor}
# user with granted permissions for modifying the schema and performing CREATE, UPDATE, SELECT and DELETE queries
spring.flyway.user=postgres
# password for user with granted permissions for modifying the schema and performing CREATE, UPDATE, SELECT and DELETE
spring.flyway.password=postgres
spring.flyway.enabled=true

# region disable creation warning
# If `spring.flyway.enabled = false` and `spring.jpa.hibernate.ddl-auto = update`, uncomment below lines
# more info, see: https://stackoverflow.com/a/50374132/5640649
# for plain hibernate
#hibernate.schema_update.unique_constraint_strategy=RECREATE_QUIETLY
# for spring data
#spring.jpa.properties.hibernate.schema_update.unique_constraint_strategy=RECREATE_QUIETLY
# endregion
# endregion

# region Error Handling
spring.mvc.throw-exception-if-no-handler-found=true
# endregion

# region Security
gms.request.auth.username=usernameOrEmail
gms.request.auth.password=password

# region JWT
# region General
# Make sure this is a strong secret. A good one may be found at https://www.grc.com/passwords.htm,
# https://strongpasswordgenerator.com, https://passwordsgenerator.net/
gms.security.jwt.secret=OIwOG02p4f8UyfqAwEAHnKaEjpwQMyBqO9cmvp70d6P9nbuNbF6c0WQwlYBjWjb
gms.security.jwt.issued_time_holder=issued_at
gms.security.jwt.authorities_holder=authorities
gms.security.jwt.issuer=www.gms.com
# endregion

# region Access Token
# as per https://tools.ietf.org/html/rfc6750, gms.security.jwt.token_holder and gms.security.jwt.token_type
# properties should not be customised.
gms.security.jwt.token_holder=access_token
gms.security.jwt.token_type=Bearer
gms.security.jwt.token_type_holder=token_type
gms.security.jwt.token_header=Authorization
gms.security.jwt.token_header_to_be_sent_holder=header_to_be_sent
# a positive long(https://docs.oracle.com/javase/7/docs/api/java/lang/Long.html) value in seconds (1 day by default)
gms.security.jwt.token_expiration=86400
gms.security.jwt.token_expiration_time_holder=token_expiration_time
gms.security.jwt.token_expires_in_holder=token_expires_in
# endregion

# region Refresh Token
gms.security.jwt.refresh_token_holder=refresh_token
# a positive long(https://docs.oracle.com/javase/7/docs/api/java/lang/Long.html) value in seconds (30 days by default)
gms.security.jwt.refresh_token_expiration=2592000
gms.security.jwt.refresh_token_expiration_time_holder=refresh_token_expiration_time
gms.security.jwt.refresh_token_expires_in_holder=refresh_token_expires_in
# endregion
# endregion

# region Sign-Up/Sign-In/Sign-Out
gms.security.sign_up_url=/sign-up
gms.security.sign_in_url=/login
# endregion

# semicolon-separated url
# relative url to base-api-path
gms.security.free_url_any=
gms.security.free_url_post=
gms.security.free_url_get=
# endregion

# region Config
logging.file.path=/home/gms/logs
server.servlet.jsp.registered=false
spring.application.name=gms
spring.data.rest.basePath=/api
spring.http.encoding.charset=UTF-8
spring.jackson.default-property-inclusion=non_null
spring.messages.basename=i18n.configuration,i18n.entity,i18n.field,i18n.frameworkoverride,i18n.label,i18n.messages,\
  i18n.role,i18n.user,i18n.validations
spring.messages.encoding=UTF-8
spring.messages.use-code-as-default-message=true
spring.messages.fallback-to-system-locale=false
spring.mvc.hiddenmethod.filter.enabled=false
# endregion

# Includes
spring.profiles.include=misc,vars,initial

# Active profile (development, test, production): change for required env
spring.profiles.active=development
